package util

import (
	"fmt"
	"testing"
)

type testStruct struct {
	Driver   string `json:"driver"`
	Username string `json:"username"`
	Password string `json:"password"`
	Addr     string `json:"addr"`
	Database string `json:"database"`
	Charset  string `json:"charset"`
}

type AutoGenerated struct {
	Xorm struct {
		Driver   string `json:"driver"`
		Username string `json:"username"`
		Password string `json:"password"`
		Addr     string `json:"addr"`
		Port     int    `json:"port"`
		Database string `json:"database"`
		Charset  string `json:"charset"`
	} `json:"xorm"`
	Redis struct {
		Addr     string `json:"addr"`
		Port     int    `json:"port"`
		Password string `json:"password"`
		Database int    `json:"database"`
	} `json:"redis"`
	Cors struct {
		AllowOrigins     []string `json:"AllowOrigins"`
		AllowMethods     []string `json:"AllowMethods"`
		ExposeHeaders    []string `json:"ExposeHeaders"`
		AllowCredentials bool     `json:"AllowCredentials"`
	} `json:"cors"`
}

func TestConcat(t *testing.T) {
	testStr := Concat("This ", "is ", "a ", "string.")
	println("Concat string: ", testStr)
}

func TestGetSnowflakeID(t *testing.T) {
	testID := GetSnowflakeID(1)
	println("ID: ", testID.Int64())
}
func TestParseJSONFile(t *testing.T) {
	var test AutoGenerated
	ParseJSONFile("../conf/config.json", &test)
	fmt.Printf("%v\n", test)
}
